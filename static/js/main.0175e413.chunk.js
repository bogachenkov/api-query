(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{109:function(e,t,r){"use strict";var n=r(0),a=r.n(n),c=r(352);r(347);t.a=function(e){var t=e.size;return a.a.createElement("span",{className:"spinner"},a.a.createElement(c.a,{size:t}))}},150:function(e,t,r){r(151),e.exports=r(351)},20:function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r(4);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var c=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,r,c;return t=e,c=[{key:"signInAction",value:function(e){return{type:n.a.SIGN_IN_REQUEST,payload:{credentials:e}}}},{key:"signInSuccess",value:function(e){return{type:n.a.SIGN_IN_SUCCESS,payload:e}}},{key:"signInFails",value:function(e){return{type:n.a.SIGN_IN_FAILS,payload:{error:e}}}},{key:"requestQuery",value:function(e){return{type:n.a.QUERY_REQUEST,payload:e}}},{key:"setResponseValue",value:function(e){return{type:n.a.SET_RESPONSE_VALUE,payload:{value:e}}}},{key:"setWidthOnResize",value:function(e){return{type:n.a.SET_WIDTH,payload:{width:e}}}},{key:"updateRecord",value:function(e){return{type:n.a.UPDATE_RECORD,payload:e}}},{key:"newRecord",value:function(e){return{type:n.a.NEW_RECORD,payload:e}}},{key:"selectRecord",value:function(e){return{type:n.a.SELECT_RECORD,payload:{id:e}}}},{key:"removeRecordRequest",value:function(e){return{type:n.a.REMOVE_RECORD_REQUEST,payload:{id:e}}}},{key:"removeRecord",value:function(e){return{type:n.a.REMOVE_RECORD,payload:{id:e}}}},{key:"removeSelectedRecord",value:function(e){return{type:n.a.REMOVE_SELECTED_RECORD,payload:{id:e}}}},{key:"clearHistory",value:function(){return{type:n.a.CLEAR_HISTORY}}},{key:"runFromHistory",value:function(e,t){return{type:n.a.RUN_FROM_HISTORY,payload:{id:e,value:t}}}}],(r=null)&&a(t.prototype,r),c&&a(t,c),e}()},347:function(e,t,r){},348:function(e,t,r){},350:function(e,t,r){},351:function(e,t,r){"use strict";r.r(t);var n=r(0),a=r.n(n),c=r(73),o=r.n(c),u=r(75),i=r(108),s=r(145),l=r(19),E=r(107),O=r(146),p=r.n(O),f=r(147),R=r(148),d=r(4);function S(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function b(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?S(Object(r),!0).forEach((function(t){y(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):S(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function y(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var _={isAuth:!1,loading:!1,login:null,error:""};var v=r(355);function m(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function g(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?m(Object(r),!0).forEach((function(t){j(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function j(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function I(e){return function(e){if(Array.isArray(e))return h(e)}(e)||function(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"===typeof e)return h(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return h(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var T='/*\n  # \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f:\n  # \u041f\u043e\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (\u0441\u043b\u0435\u0432\u0430) \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0439 JSON \u0438 JS-\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438;\n  # \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0432\u043a\u043b\u0430\u0434\u043e\u043a \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043a\u043b\u044e\u0447\u0430 "queryType",\n  \u0435\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u043e "Untitled" + \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f.;\n  # \u0412\u043c\u0435\u0441\u0442\u043e \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e API \u0441\u0442\u043e\u044f\u0442 \u0437\u0430\u0433\u043b\u0443\u0448\u043a\u0438;\n  # \u041a\u0430\u0436\u0434\u044b\u0439 \u043d\u043e\u0432\u044b\u0439 (\u0438\u0437\u043c\u0435\u043d\u0451\u043d\u043d\u044b\u0439) \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u044e;\n  # \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 - 20 \u0437\u0430\u043f\u0438\u0441\u0435\u0439;\n  # \u041f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u0437 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 (\u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u044f \u0435\u0433\u043e), \u0434\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u0438\u0441\u0442\u043e\u0440\u0438\u0438;\n  # \u0428\u0438\u0440\u0438\u043d\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430 \u0438 \u0438\u0441\u0442\u043e\u0440\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0434\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0432\u044b\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430;\n  # \u041a\u043d\u043e\u043f\u043a\u0430 "\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c" \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (\u0442\u0430\u043a\u0436\u0435 \u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0448 Shift+Alt+F);\n  # \u041f\u0435\u0440\u0435\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u043e\u0439 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043d\u0430 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c JSON\'a\n*/\n\n{\n  "queryType": "test.query.demo",\n  "isDemoVersion": true,\n  "someOtherField": 1000\n}';function C(){var e=Object(v.a)();return{records:[{id:e,name:"Untitled",value:T}],selected:e}}function N(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:20;return e.length>=r?[].concat(I(e.slice(1)),[t]):[].concat(I(e),[t])}function w(e,t){return e.map((function(e){return e.id===t.id?g(g({},e),{},{value:t.value,name:t.name}):e})).sort((function(e,r){return e.id===t.id?1:r.id===t.id?-1:0}))}function D(e,t){return{records:I(e.filter((function(e){return e.id!==t})))}}function U(e,t){var r=e.findIndex((function(e){return e.id===t}));return{selected:e[r+1]?e[r+1].id:e[r-1].id,records:I(e.filter((function(e){return e.id!==t})))}}var x=C();function k(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function P(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?k(Object(r),!0).forEach((function(t){A(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):k(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function A(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var V={responseValue:null,loading:!1};var L={width:null},M=Object(l.combineReducers)({auth:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case d.a.SIGN_IN_REQUEST:return b(b({},e),{},{loading:!0});case d.a.SIGN_IN_FAILS:return b(b({},e),{},{loading:!1,error:t.payload.error});case d.a.SIGN_IN_SUCCESS:return b(b({},e),{},{loading:!1,login:t.payload.login,isAuth:!0});case d.a.SIGN_OUT:return _;default:return e}},history:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x,t=arguments.length>1?arguments[1]:void 0,r=t.type,n=t.payload;switch(r){case d.a.NEW_RECORD:var a=Object(v.a)();return g(g({},e),{},{records:N(e.records,{id:a,value:n.value,name:n.name}),selected:a});case d.a.UPDATE_RECORD:return g(g({},e),{},{records:w(e.records,n)});case d.a.REMOVE_RECORD:return g(g({},e),D(e.records,n.id));case d.a.REMOVE_SELECTED_RECORD:return 1===e.records.length?g(g({},e),C()):g(g({},e),U(e.records,n.id));case d.a.SELECT_RECORD:return g(g({},e),{},{selected:n.id});case d.a.CLEAR_HISTORY:return g(g({},e),C());case d.a.SIGN_OUT:return x;default:return e}},response:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:V,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case d.a.QUERY_REQUEST:return P(P({},e),{},{loading:!0});case d.a.SET_RESPONSE_VALUE:return{responseValue:t.payload.value,loading:!1};case d.a.REMOVE_RESPONSE_VALUE:case d.a.SELECT_RECORD:case d.a.CLEAR_HISTORY:return P(P({},e),{},{responseValue:null});default:return e}},editor:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:L,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case d.a.SET_WIDTH:return{width:t.payload.width};case d.a.SIGN_OUT:return L;default:return e}}}),G=r(7),H=r(20),Q=regeneratorRuntime.mark(Y),F=regeneratorRuntime.mark(W);function Y(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,Object(G.d)(1e3);case 3:return sessionStorage.setItem("login",e.login),t.next=6,Object(G.f)(H.a.signInSuccess({login:e.login}));case 6:t.next=12;break;case 8:return t.prev=8,t.t0=t.catch(0),t.next=12,Object(G.f)(H.a.signInFails(t.t0));case 12:case"end":return t.stop()}}),Q,null,[[0,8]])}function W(){var e,t,r,n;return regeneratorRuntime.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(!(e=sessionStorage.getItem("login"))){a.next=10;break}return a.next=5,Object(G.f)(H.a.signInSuccess({login:e}));case 5:return a.next=7,Object(G.i)(d.a.SIGN_OUT);case 7:sessionStorage.removeItem("login"),a.next=24;break;case 10:return a.next=12,Object(G.i)(d.a.SIGN_IN_REQUEST);case 12:return t=a.sent,r=t.payload.credentials,a.next=16,Object(G.e)(Y,r);case 16:return n=a.sent,a.next=19,Object(G.i)([d.a.SIGN_IN_FAILS,d.a.SIGN_OUT]);case 19:if(a.sent.type!==d.a.SIGN_OUT){a.next=24;break}return sessionStorage.removeItem("login"),a.next=24,Object(G.c)(n);case 24:a.next=0;break;case 26:case"end":return a.stop()}}),F)}var q=W,J=regeneratorRuntime.mark($),z=regeneratorRuntime.mark(Z),K=function(e){var t=JSON.parse(e.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1").trim()),r=new Date,n=r.getHours(),a=r.getMinutes();return t.queryType||"Untitled [".concat(n<10?"0".concat(n):n,":").concat(a<10?"0".concat(a):a,"]")};function $(e){var t,r,n,a,c,o,u,i,s;return regeneratorRuntime.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return t=e.payload,l.prev=1,r=t.value,n=t.id,l.next=5,Object(G.g)((function(e){return e.history.records}));case 5:return a=l.sent,c=a.find((function(e){return e.id===n})),l.next=9,Object(G.b)(fetch,"https://jsonplaceholder.typicode.com/users/".concat(Math.floor(9*Math.random()+1)));case 9:if(!((o=l.sent).status<200||o.status>=300)){l.next=12;break}throw new Error(o.status+" "+o.statusText);case 12:return l.next=14,Object(G.b)([o,o.json]);case 14:return u=l.sent,i=c.value===r&&1===a.length&&c.value===T,s=c&&(c.value===r||i)?H.a.updateRecord({id:n,name:K(r),value:r}):H.a.newRecord({name:K(r),value:r}),l.next=19,Object(G.a)([Object(G.f)(s),Object(G.f)(H.a.setResponseValue(JSON.stringify(u,null,"\t")))]);case 19:l.next=25;break;case 21:return l.prev=21,l.t0=l.catch(1),l.next=25,Object(G.f)(H.a.setResponseValue(l.t0.toString()));case 25:case"end":return l.stop()}}),J,null,[[1,21]])}function Z(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(G.j)(d.a.QUERY_REQUEST,$);case 2:case"end":return e.stop()}}),z)}var B=regeneratorRuntime.mark(te),X=regeneratorRuntime.mark(re),ee=regeneratorRuntime.mark(ne);function te(e){var t;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return t=e.payload,r.prev=1,r.next=4,Object(G.g)((function(e){return e.history.selected}));case 4:if(r.sent!==t.id){r.next=10;break}return r.next=8,Object(G.a)([Object(G.f)({type:d.a.REMOVE_RESPONSE_VALUE}),Object(G.f)(H.a.removeSelectedRecord(t.id))]);case 8:r.next=12;break;case 10:return r.next=12,Object(G.f)(H.a.removeRecord(t.id));case 12:r.next=17;break;case 14:r.prev=14,r.t0=r.catch(1),console.error(r.t0);case 17:case"end":return r.stop()}}),B,null,[[1,14]])}function re(e){var t,r,n;return regeneratorRuntime.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return t=e.payload,a.prev=1,r=t.id,n=t.value,a.next=5,Object(G.a)([Object(G.f)(H.a.selectRecord(r)),Object(G.f)(H.a.requestQuery({id:r,value:n}))]);case 5:a.next=10;break;case 7:a.prev=7,a.t0=a.catch(1),console.error(a.t0);case 10:case"end":return a.stop()}}),X,null,[[1,7]])}function ne(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(G.j)(d.a.REMOVE_RECORD_REQUEST,te);case 2:return e.next=4,Object(G.j)(d.a.RUN_FROM_HISTORY,re);case 4:case"end":return e.stop()}}),ee)}var ae=ne,ce=regeneratorRuntime.mark(oe);function oe(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(G.h)(q);case 2:return e.next=4,Object(G.h)(Z);case 4:return e.next=6,Object(G.h)(ae);case 6:case"end":return e.stop()}}),ce)}var ue={key:"root",storage:p.a,blacklist:["auth","response"]},ie=Object(E.a)(ue,M),se=Object(R.a)(),le=Object(l.createStore)(ie,Object(f.composeWithDevTools)(Object(l.applyMiddleware)(se))),Ee=Object(E.b)(le);se.run(oe);var Oe={store:le,persistor:Ee},pe=r(5),fe=r(109),Re=(r(348),function(){return a.a.createElement("div",{className:"app-loader"},a.a.createElement(fe.a,{size:48}))}),de=Object(n.lazy)((function(){return Promise.all([r.e(3),r.e(4)]).then(r.bind(null,547))})),Se=Object(n.lazy)((function(){return r.e(5).then(r.bind(null,548))})),be=function(){return a.a.createElement(n.Suspense,{fallback:a.a.createElement(Re,null)},a.a.createElement(pe.c,null,a.a.createElement(pe.a,{path:"/signin",element:a.a.createElement(Se,null)}),a.a.createElement(pe.a,{path:"/*",element:a.a.createElement(de,null)})))},ye=(r(349),r(350),function(){return a.a.createElement(u.a,null,a.a.createElement(be,null))});o.a.render(a.a.createElement(i.a,{store:Oe.store},a.a.createElement(s.a,{loading:a.a.createElement(Re,null),persistor:Oe.persistor},a.a.createElement(ye,null))),document.getElementById("root"))},4:function(e,t,r){"use strict";t.a={SET_ERROR:"SET_ERROR",REMOVE_ERROR:"REMOVE_ERROR",CHECK_SESSION:"CHECK_SESSION",CHECK_SESSION_SUCCESS:"CHECK_SESSION_SUCCESS",CHECK_SESSION_FAILS:"CHECK_SESSION_FAILS",SIGN_IN_REQUEST:"SIGN_IN_REQUEST",SIGN_IN_SUCCESS:"SIGN_IN_SUCCESS",SIGN_IN_FAILS:"SIGN_IN_FAILS",SIGN_OUT:"SIGN_OUT",EDITOR_RESIZE:"EDITOR_RESIZE",SET_WIDTH:"SET_WIDTH",SET_RESPONSE_VALUE:"SET_RESPONSE_VALUE",REMOVE_RESPONSE_VALUE:"REMOVE_RESPONSE_VALUE",NEW_RECORD:"NEW_RECORD",UPDATE_RECORD:"UPDATE_RECORD",REMOVE_RECORD_REQUEST:"REMOVE_RECORD_REQUEST",REMOVE_RECORD:"REMOVE_RECORD",REMOVE_SELECTED_RECORD:"REMOVE_SELECTED_RECORD",SELECT_RECORD:"SELECT_RECORD",RUN_FROM_HISTORY:"RUN_FROM_HISTORY",CLEAR_HISTORY:"CLEAR_HISTORY",QUERY_REQUEST:"QUERY_REQUEST"}}},[[150,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,